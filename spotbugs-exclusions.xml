<?xml version="1.0" encoding="UTF-8"?>
<FindBugsFilter
        xmlns="https://github.com/spotbugs/filter/3.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="https://github.com/spotbugs/filter/3.0.0 https://raw.githubusercontent.com/spotbugs/spotbugs/3.1.0/spotbugs/etc/findbugsfilter.xsd">

    <!-- I'm reasonably confident that the singleton pattern isn't exposing internal representation -->
    <And>
        <Class name="dev.openfeature.sdk.OpenFeatureAPI"/>
        <Bug pattern="MS_EXPOSE_REP"/>
    </And>
    <And>
        <Class name="dev.openfeature.api.OpenFeatureAPI"/>
        <Bug pattern="MS_EXPOSE_REP"/>
    </And>
    <!-- evaluation context and hooks are mutable if mutable impl is used -->
    <And>
        <Class name="dev.openfeature.sdk.OpenFeatureClient"/>
        <Bug pattern="EI_EXPOSE_REP"/>
    </And>
    <And>
        <Class name="dev.openfeature.sdk.OpenFeatureClient"/>
        <Bug pattern="EI_EXPOSE_REP2"/>
    </And>
    <And>
        <Class name="dev.openfeature.sdk.OpenFeatureAPI"/>
        <Bug pattern="EI_EXPOSE_REP"/>
    </And>
    <And>
        <Class name="dev.openfeature.sdk.OpenFeatureAPI"/>
        <Bug pattern="EI_EXPOSE_REP2"/>
    </And>
    <And>
        <Class name="dev.openfeature.api.OpenFeatureAPI"/>
        <Bug pattern="EI_EXPOSE_REP"/>
    </And>
    <And>
        <Class name="dev.openfeature.api.OpenFeatureAPI"/>
        <Bug pattern="EI_EXPOSE_REP2"/>
    </And>
    <!-- API classes that expose internal representations by design -->
    <And>
        <Class name="dev.openfeature.api.internal.noop.NoOpOpenFeatureAPI"/>
        <Bug pattern="EI_EXPOSE_REP"/>
    </And>
    <And>
        <Class name="dev.openfeature.api.FlagEvaluationOptions"/>
        <Bug pattern="EI_EXPOSE_REP"/>
    </And>
    <And>
        <Class name="dev.openfeature.api.FlagEvaluationOptions"/>
        <Bug pattern="EI_EXPOSE_REP2"/>
    </And>
    <And>
        <Class name="dev.openfeature.api.FlagEvaluationOptions$FlagEvaluationOptionsBuilder"/>
        <Bug pattern="EI_EXPOSE_REP2"/>
    </And>
    <And>
        <Class name="dev.openfeature.api.DefaultProviderEventDetails"/>
        <Bug pattern="EI_EXPOSE_REP"/>
    </And>
    <And>
        <Class name="dev.openfeature.api.DefaultProviderEventDetails"/>
        <Bug pattern="EI_EXPOSE_REP2"/>
    </And>
    <And>
        <Class name="dev.openfeature.api.DefaultProviderEventDetails$ProviderEventDetailsBuilder"/>
        <Bug pattern="EI_EXPOSE_REP2"/>
    </And>
    <And>
        Added in spotbugs 4.8.0 - EventProvider shares a name with something from the standard lib (confusing), but change would be breaking
        <Class name="dev.openfeature.sdk.EventProvider"/>
        <Bug pattern="PI_DO_NOT_REUSE_PUBLIC_IDENTIFIERS_CLASS_NAMES"/>
    </And>
    <!-- EventProvider class intentionally shadows interface name for backward compatibility -->
    <And>
        <Class name="dev.openfeature.sdk.EventProvider"/>
        <Bug pattern="NM_SAME_SIMPLE_NAME_AS_INTERFACE"/>
    </And>
    <!-- SDK classes that expose internal representations by design -->
    <And>
        <Class name="dev.openfeature.sdk.DefaultOpenFeatureAPI"/>
        <Bug pattern="EI_EXPOSE_REP"/>
    </And>
    <And>
        <Class name="dev.openfeature.sdk.DefaultOpenFeatureAPI"/>
        <Bug pattern="EI_EXPOSE_REP2"/>
    </And>
    <And>
        <Class name="dev.openfeature.api.internal.noop.NoOpProvider"/>
        <Bug pattern="SS_SHOULD_BE_STATIC"/>
    </And>
    <And>
        <Class name="dev.openfeature.sdk.providers.memory.Flag"/>
        <Bug pattern="EI_EXPOSE_REP"/>
    </And>
    <And>
        Added in spotbugs 4.8.0 - Metadata shares a name with something from the standard lib (confusing), but change would be breaking
        <Class name="dev.openfeature.api.ProviderMetadata"/>
        <Bug pattern="PI_DO_NOT_REUSE_PUBLIC_IDENTIFIERS_CLASS_NAMES"/>
    </And>
    <And>
        Added in spotbugs 4.8.0 - Reason shares a name with something from the standard lib (confusing), but change would be breaking
        <Class name="dev.openfeature.api.Reason"/>
        <Bug pattern="PI_DO_NOT_REUSE_PUBLIC_IDENTIFIERS_CLASS_NAMES"/>
    </And>
    <And>
        Added in spotbugs 4.8.0 - FlagValueType.STRING shares a name with something from the standard lib (confusing), but change would be breaking
        <Class name="dev.openfeature.api.FlagValueType"/>
        <Bug pattern="PI_DO_NOT_REUSE_PUBLIC_IDENTIFIERS_FIELD_NAMES"/>
    </And>
    <!-- Lombok generated code issues -->
    <And>
        <Class name="dev.openfeature.api.HookContext"/>
        <Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE"/>
    </And>
    <And>
        <Class name="dev.openfeature.api.HookContext"/>
        <Bug pattern="ES_COMPARING_PARAMETER_STRING_WITH_EQ"/>
    </And>
    <!-- Intentional null return for Boolean wrapper -->
    <And>
        <Class name="dev.openfeature.api.ImmutableMetadata"/>
        <Bug pattern="NP_BOOLEAN_RETURN_NULL"/>
    </And>

    <!-- Test class that should be excluded -->
    <Match>
        <Class name="dev.openfeature.sdk.DoSomethingProvider"/>
    </Match>
    <!-- All bugs in test classes, except for JUnit-specific bugs -->
    <Match>
        <Class name="~.*\.*Test" />
        <Not>
            <Bug code="IJU" />
        </Not>
    </Match>
</FindBugsFilter>
